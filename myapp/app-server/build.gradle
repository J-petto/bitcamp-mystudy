plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.6'
}

// jar 파일 경로
group = 'bitcamp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    // gradle에게 컴파일 할 때 annotation 먼저 처리하기를 요청함
    // 왜? lombok을 사용하기 위해서 - 자동으로 get, set 등 다양한 데이터를 자동으로 만들어주는데 컴파일 단계에서 처리를 하기 때문
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'
    compileOnly 'org.projectlombok:lombok' // 컴파일 단계에서 도메인 객체를 만들어줌 // compileOnly 컴파일할 때 씀
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j' // runtimeOnly 실행할때만 씀
    // annotationProcessor : 컴파일 단계에서 애노테이션을 처리해줄 도구가 들어있음
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JDBC Driver
    //implementation 'com.mysql:mysql-connector-j:8.4.0'
    //implementation 'com.google.code.gson:gson:2.11.0'

    // Tomcat Embedded Server용 JSP 라이브러리
//    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.83'

    // JSTL API 및 구현체 라이브러리
    implementation 'javax.servlet:jstl:1.2'

    // Amazon S3 라이브러리
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.772'

//    implementation libs.guava
}

tasks.named('test') {
    useJUnitPlatform()
}